{"ast":null,"code":"// status\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('./core'), require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    factory(window, window.InfiniteScroll, window.fizzyUIUtils);\n  }\n})(window, function factory(window, InfiniteScroll, utils) {\n  let proto = InfiniteScroll.prototype;\n\n  // InfiniteScroll.defaults.status = null;\n\n  InfiniteScroll.create.status = function () {\n    let statusElem = utils.getQueryElement(this.options.status);\n    if (!statusElem) return;\n\n    // elements\n    this.statusElement = statusElem;\n    this.statusEventElements = {\n      request: statusElem.querySelector('.infinite-scroll-request'),\n      error: statusElem.querySelector('.infinite-scroll-error'),\n      last: statusElem.querySelector('.infinite-scroll-last')\n    };\n    // events\n    this.on('request', this.showRequestStatus);\n    this.on('error', this.showErrorStatus);\n    this.on('last', this.showLastStatus);\n    this.bindHideStatus('on');\n  };\n  proto.bindHideStatus = function (bindMethod) {\n    let hideEvent = this.options.append ? 'append' : 'load';\n    this[bindMethod](hideEvent, this.hideAllStatus);\n  };\n  proto.showRequestStatus = function () {\n    this.showStatus('request');\n  };\n  proto.showErrorStatus = function () {\n    this.showStatus('error');\n  };\n  proto.showLastStatus = function () {\n    this.showStatus('last');\n    // prevent last then append event race condition from showing last status #706\n    this.bindHideStatus('off');\n  };\n  proto.showStatus = function (eventName) {\n    show(this.statusElement);\n    this.hideStatusEventElements();\n    let eventElem = this.statusEventElements[eventName];\n    show(eventElem);\n  };\n  proto.hideAllStatus = function () {\n    hide(this.statusElement);\n    this.hideStatusEventElements();\n  };\n  proto.hideStatusEventElements = function () {\n    for (let type in this.statusEventElements) {\n      let eventElem = this.statusEventElements[type];\n      hide(eventElem);\n    }\n  };\n\n  // --------------------------  -------------------------- //\n\n  function hide(elem) {\n    setDisplay(elem, 'none');\n  }\n  function show(elem) {\n    setDisplay(elem, 'block');\n  }\n  function setDisplay(elem, value) {\n    if (elem) {\n      elem.style.display = value;\n    }\n  }\n\n  // --------------------------  -------------------------- //\n\n  return InfiniteScroll;\n});","map":{"version":3,"names":["window","factory","module","exports","require","InfiniteScroll","fizzyUIUtils","utils","proto","prototype","create","status","statusElem","getQueryElement","options","statusElement","statusEventElements","request","querySelector","error","last","on","showRequestStatus","showErrorStatus","showLastStatus","bindHideStatus","bindMethod","hideEvent","append","hideAllStatus","showStatus","eventName","show","hideStatusEventElements","eventElem","hide","type","elem","setDisplay","value","style","display"],"sources":["/Users/michaelofengenden/Desktop/Infapp/node_modules/infinite-scroll/js/status.js"],"sourcesContent":["// status\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window,\n        window.InfiniteScroll,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( window, function factory( window, InfiniteScroll, utils ) {\n\nlet proto = InfiniteScroll.prototype;\n\n// InfiniteScroll.defaults.status = null;\n\nInfiniteScroll.create.status = function() {\n  let statusElem = utils.getQueryElement( this.options.status );\n  if ( !statusElem ) return;\n\n  // elements\n  this.statusElement = statusElem;\n  this.statusEventElements = {\n    request: statusElem.querySelector('.infinite-scroll-request'),\n    error: statusElem.querySelector('.infinite-scroll-error'),\n    last: statusElem.querySelector('.infinite-scroll-last'),\n  };\n  // events\n  this.on( 'request', this.showRequestStatus );\n  this.on( 'error', this.showErrorStatus );\n  this.on( 'last', this.showLastStatus );\n  this.bindHideStatus('on');\n};\n\nproto.bindHideStatus = function( bindMethod ) {\n  let hideEvent = this.options.append ? 'append' : 'load';\n  this[ bindMethod ]( hideEvent, this.hideAllStatus );\n};\n\nproto.showRequestStatus = function() {\n  this.showStatus('request');\n};\n\nproto.showErrorStatus = function() {\n  this.showStatus('error');\n};\n\nproto.showLastStatus = function() {\n  this.showStatus('last');\n  // prevent last then append event race condition from showing last status #706\n  this.bindHideStatus('off');\n};\n\nproto.showStatus = function( eventName ) {\n  show( this.statusElement );\n  this.hideStatusEventElements();\n  let eventElem = this.statusEventElements[ eventName ];\n  show( eventElem );\n};\n\nproto.hideAllStatus = function() {\n  hide( this.statusElement );\n  this.hideStatusEventElements();\n};\n\nproto.hideStatusEventElements = function() {\n  for ( let type in this.statusEventElements ) {\n    let eventElem = this.statusEventElements[ type ];\n    hide( eventElem );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction hide( elem ) {\n  setDisplay( elem, 'none' );\n}\n\nfunction show( elem ) {\n  setDisplay( elem, 'block' );\n}\n\nfunction setDisplay( elem, value ) {\n  if ( elem ) {\n    elem.style.display = value;\n  }\n}\n\n// --------------------------  -------------------------- //\n\nreturn InfiniteScroll;\n\n} ) );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}