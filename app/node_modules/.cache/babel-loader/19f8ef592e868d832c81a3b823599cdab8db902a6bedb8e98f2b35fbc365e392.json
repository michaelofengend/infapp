{"ast":null,"code":"var _jsxFileName = \"/Users/michaelofengenden/Desktop/Infapp/app/src/Example1.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport usePosts from './hooks/usePosts';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example1 = () => {\n  _s();\n  const [pageNum, setPageNum] = useState(1);\n  const {\n    isLoading,\n    isError,\n    error,\n    results,\n    hasNextPage\n  } = usePosts(pageNum);\n  const lastPostRef = useRef();\n  if (isError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"center\",\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n  const content = results.map((post, i) => {\n    if (results.length === i + 1) {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        ref: lastPostRef,\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"top\",\n      children: [\"\\u221E Infinite Query & Scroll\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 61\n      }, this), \"\\u221E Ex. 1 - React only\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), content, isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading more posts ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#top\",\n        children: \" Back to Top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Example1, \"q3I8ag7CtlJoNY3CH+66lOxuq20=\", false, function () {\n  return [usePosts];\n});\n_c = Example1;\nexport default Example1;\nvar _c;\n$RefreshReg$(_c, \"Example1\");","map":{"version":3,"names":["useState","useRef","usePosts","Post","Example1","pageNum","setPageNum","isLoading","isError","error","results","hasNextPage","lastPostRef","message","content","map","post","i","length","id"],"sources":["/Users/michaelofengenden/Desktop/Infapp/app/src/Example1.js"],"sourcesContent":["import { useState, useRef } from 'react'\nimport usePosts from './hooks/usePosts'\nimport Post from './Post'\nconst Example1 = () => {\n    const [pageNum, setPageNum] = useState(1)\n    const {\n        isLoading, \n        isError,\n        error,\n        results, \n        hasNextPage\n    } = usePosts(pageNum)\n\n    const lastPostRef = useRef()\n\n    if (isError) return <p className='center'>Error: {error.message}</p>\n\n    const content = results.map((post, i) => {\n        if (results.length === i + 1) {\n            return <Post ref={lastPostRef} key={post.id} post={post} />\n        }\n        return <Post key={post.id} post={post} />\n    })\n    return (\n        <>\n            <h1 id=\"top\">&infin; Infinite Query &amp; Scroll<br />&infin;\n            Ex. 1 - React only</h1>\n            {content}\n            {isLoading && <p className=\"center\">Loading more posts ... </p>}\n            <p className=\"center\"><a href=\"#top\"> Back to Top</a></p>\n        </>\n    )\n}\nexport default Example1"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAAA;AACzB,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM;IACFO,SAAS;IACTC,OAAO;IACPC,KAAK;IACLC,OAAO;IACPC;EACJ,CAAC,GAAGT,QAAQ,CAACG,OAAO,CAAC;EAErB,MAAMO,WAAW,GAAGX,MAAM,EAAE;EAE5B,IAAIO,OAAO,EAAE,oBAAO;IAAG,SAAS,EAAC,QAAQ;IAAA,sBAASC,KAAK,CAACI,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;EAEpE,MAAMC,OAAO,GAAGJ,OAAO,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACrC,IAAIP,OAAO,CAACQ,MAAM,KAAKD,CAAC,GAAG,CAAC,EAAE;MAC1B,oBAAO,QAAC,IAAI;QAAC,GAAG,EAAEL,WAAY;QAAe,IAAI,EAAEI;MAAK,GAApBA,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB;IAC/D;IACA,oBAAO,QAAC,IAAI;MAAe,IAAI,EAAEH;IAAK,GAApBA,IAAI,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAAgB;EAC7C,CAAC,CAAC;EACF,oBACI;IAAA,wBACI;MAAI,EAAE,EAAC,KAAK;MAAA,0DAAoC;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,EACtBL,OAAO,EACPP,SAAS,iBAAI;MAAG,SAAS,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC/D;MAAG,SAAS,EAAC,QAAQ;MAAA,uBAAC;QAAG,IAAI,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA,gBAC1D;AAEX,CAAC;AAAA,GA7BKH,QAAQ;EAAA,QAQNF,QAAQ;AAAA;AAAA,KARVE,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}